// <auto-generated />
using System;
using GuildManagerCA.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GuildManagerCA.Infrastructure.Migrations
{
    [DbContext(typeof(GuildManagerDbContext))]
    partial class GuildManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GuildManagerCA.Domain.RaidEventAggregate.RaidEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AutoAccept")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RaidLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RaidEvents", (string)null);
                });

            modelBuilder.Entity("GuildManagerCA.Domain.RaidLocationAggregate.RaidLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RaidLocations", (string)null);
                });

            modelBuilder.Entity("GuildManagerCA.Domain.RaidEventAggregate.RaidEvent", b =>
                {
                    b.OwnsMany("GuildManagerCA.Domain.RaidEventAggregate.Entities.Comment", "Comments", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("CommentId");

                            b1.Property<Guid>("RaidEventId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Author")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("CreatedDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Message")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("ModifiedDateTime")
                                .HasColumnType("datetime2");

                            b1.HasKey("Id", "RaidEventId");

                            b1.HasIndex("RaidEventId");

                            b1.ToTable("Comments", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("RaidEventId");
                        });

                    b.OwnsMany("GuildManagerCA.Domain.RaidEventAggregate.Entities.RaidEventAttendance", "Attendances", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("RaidEventAttendanceId");

                            b1.Property<Guid>("RaidEventId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("AcceptanceStatus")
                                .HasColumnType("int");

                            b1.Property<Guid>("CharacterId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id", "RaidEventId");

                            b1.HasIndex("RaidEventId");

                            b1.ToTable("RaidEventAttendances", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("RaidEventId");
                        });

                    b.Navigation("Attendances");

                    b.Navigation("Comments");
                });

            modelBuilder.Entity("GuildManagerCA.Domain.RaidLocationAggregate.RaidLocation", b =>
                {
                    b.OwnsOne("GuildManagerCA.Domain.RaidLocationAggregate.ValueObjects.RaidExpansion", "Expansion", b1 =>
                        {
                            b1.Property<Guid>("RaidLocationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("ImageUrl")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("ExpansionImageUrl");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("ExpansionName");

                            b1.HasKey("RaidLocationId");

                            b1.ToTable("RaidLocations");

                            b1.WithOwner()
                                .HasForeignKey("RaidLocationId");
                        });

                    b.Navigation("Expansion")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
